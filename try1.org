#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+title: Local Search Algorithm
* Quickstart
In order to run the program one should clone the repo and run the following command
#+begin_src bash
python local_search_algorithm.py --input_path test/input/input.py --output_dir test_dir
#+end_src

the =input_path= should point to a python file for example input.py
and should have the following content
#+begin_src python
m = 6
k = 5
processing_arr = [2, 3, 3, 4, 4, 4, 5, 5, 5, 5]
#+end_src

if one get stuck he can read the docs via the command
#+begin_src bash
python  local_search_algorithm.py --help
#+end_src

One should note that the final solution to the problem is in the =output_dir= under the name =output_score.txt= ,

also there is more output contents




* Abstract
The Project try to solve the following schedule problem

Scheduling with cardinality constraints.
** Input
An integer number of (identical) machines m ≥ 2. A set of n jobs J =
{1, 2, . . . , n}, where job j has an integer processing time p_j > 0. A positive integer
parameter k.

** Goal
Find a partition (assignment) of the jobs into subsets, I_1, I_2, . . . , I_m, where
for any 3 ≤ i ≤ m, it holds that |I_i| ≤ k (a cardinality constraint of k is enforced for
all machines except for possibly the first two machines, that is, every machine whose
index is at least 3 can receive at most k jobs).
